{"version":3,"sources":["ContactList/ContactList.module.css","Contact/Contact.module.css","Filter/Filter.module.css","container/Container.module.css","ContactForm/ContactForm.module.css","container/Container.jsx","ContactForm/ContactForm.jsx","Contact/Contact.jsx","ContactList/ContactList.jsx","Filter/Filter.jsx","App.js","redux/Phonebook/phone-type.js","redux/Phonebook/phone-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleInputChange","e","target","value","reset","form","preventDefault","contact","id","uuidv4","contactFormLabel","onChange","inputContactForm","type","pattern","title","required","btnContactForm","Contact","ContactList","contacts","onDeleteContact","list","map","string","item","buttonDelete","onClick","propType","PropTypes","Filter","textFilter","inputFilter","App","JSON","parse","window","localStorage","getItem","baseContact","setContacts","filter","setFilter","useEffect","setItem","stringify","data","some","element","toLocaleLowerCase","alert","contactFilter","includes","getVisibleContact","contactId","ADD_CONTACT","DELETE_CONTACT","CHANGE_FILTER","combineReducers","state","payload","rootReducer","phoneBook","phoneBookReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,aAAe,oC,mBCAlED,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS,0B,mBCAxDD,EAAOC,QAAU,CAAC,WAAa,2BAA2B,YAAc,8B,mBCAxED,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,eAAiB,oCAAoC,iBAAmB,sCAAsC,iBAAmB,wC,+ICErK,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,I,4BC4ExBI,MA3Ef,YAAoC,IAAbC,EAAY,EAAZA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAoB,SAACC,GACzB,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,SAgBAC,EAAQ,WACZP,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAMT,UAAWC,IAAEc,KAAMX,SAlBN,SAACO,GACpBA,EAAEK,iBACF,IAAMC,EAAU,CACdC,GAAIC,cACJb,OACAE,UAGFJ,EAASa,GACTH,KASA,UACE,wBAAOd,UAAWC,IAAEmB,iBAApB,iBAEE,uBACEC,SAAUX,EACVV,UAAWC,IAAEqB,iBACbT,MAAOP,EACPiB,KAAK,OACLjB,KAAK,OACLkB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAO1B,UAAWC,IAAEmB,iBAApB,mBAEE,uBACEC,SAAUX,EACVV,UAAWC,IAAEqB,iBACbT,MAAOL,EACPe,KAAK,MACLjB,KAAK,SACLkB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQH,KAAK,SAASvB,UAAWC,IAAE0B,eAAnC,6B,yDClES,SAASC,EAAT,GAAoC,IAAjBtB,EAAgB,EAAhBA,KAAME,EAAU,EAAVA,OACtC,OACE,qCACE,mBAAGR,UAAWC,IAAEK,KAAhB,SAAuBA,IACvB,mBAAGN,UAAWC,IAAEO,OAAhB,SAAyBA,OCHhB,SAASqB,EAAT,GAAqD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBAC9C,OACE,oBAAI/B,UAAWC,IAAE+B,KAAjB,SACGF,EAASG,KAAI,gBAAG3B,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAW0B,EAApB,EAAiBhB,GAAjB,OACZ,qBAAIlB,UAAWC,IAAEkC,KAAjB,UACH,cAACP,EAAD,CAAStB,KAAMA,EAAME,OAAQA,IAExB,wBACER,UAAWC,IAAEmC,aACbb,KAAK,SACLc,QAAS,kBAAMN,EAAgBG,IAHjC,sBAH0BA,QDIpCN,EAAQU,SAAW,CACjBhC,KAAMiC,IAAUL,OAChB1B,OAAQ+B,IAAU/B,Q,qBEXL,SAASgC,EAAT,GAAsC,IAApB3B,EAAmB,EAAnBA,MAAOQ,EAAY,EAAZA,SACtC,OACE,wBAAOrB,UAAWC,IAAEwC,WAApB,iCAEE,uBACEzC,UAAWC,IAAEyC,YACbnB,KAAK,OACLV,MAAOA,EACPQ,SAAUA,OCsDHsB,MArDf,WACE,MAAgCtC,oBAC9B,kCAAMuC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBAA7C,QAA6DC,KAD/D,mBAAOnB,EAAP,KAAiBoB,EAAjB,KAGA,EAA4B7C,mBAAS,IAArC,mBAAO8C,EAAP,KAAeC,EAAf,KAkCA,OAhCAC,qBAAU,WACRP,OAAOC,aAAaO,QAAQ,WAAYV,KAAKW,UAAUzB,MACtD,CAACA,IA+BF,eAAChC,EAAD,WACE,oBAAIE,UAAU,QAAd,uBACA,cAAC,EAAD,CAAaI,SA/BS,SAACoD,GACzB,GACE1B,EAAS2B,MACP,SAACC,GAAD,OACEA,EAAQpD,KAAKqD,sBAAwBH,EAAKlD,KAAKqD,uBAGnD,OAAOC,MAAM,wBAGfV,EAAY,GAAD,mBAAKpB,GAAL,CAAe0B,QAsBxB,cAAChB,EAAD,CAAQ3B,MAAOsC,EAAQ9B,SAnBN,SAACV,GACpByC,EAAUzC,EAAEC,OAAOC,UAoBjB,oBAAIb,UAAU,eAAd,sBACA,cAAC6B,EAAD,CACEC,SAnBoB,WACxB,IAAM+B,EAAgBV,EAAOQ,oBAC7B,OAAO7B,EAASqB,QAAO,SAAClC,GAAD,OACrBA,EAAQX,KAAKqD,oBAAoBG,SAASD,MAgB9BE,GACVhC,gBAbgB,SAACiC,GACrBd,EAAYpB,EAASqB,QAAO,SAAClC,GAAD,OAAaA,EAAQC,KAAO8C,a,uBC/C/CC,EAAc,eACdC,EAAiB,eACjBC,EAAc,qBC6BZC,4BAAgB,CAAEtC,SA1BhB,WAA6C,IAA5CuC,EAA2C,uDAAnCpB,EAAmC,yCAApB1B,EAAoB,EAApBA,KAAM+C,EAAc,EAAdA,QAC7C,OAAQ/C,GACN,KAAK0C,EACH,OAAOI,EAAMZ,MACX,SAACC,GAAD,OACEA,EAAQpD,KAAKqD,sBAAwBW,EAAQhE,KAAKqD,uBAElDC,MAAM,wBAJH,sBAKCS,GALD,CAKQC,IACjB,KAAKJ,EACH,OAAOG,EAAMlB,QAAO,qBAAGjC,KAAgBoD,KAEzC,QACE,OAAOD,IAa8BlB,OAT5B,WAAoC,IAAnCkB,EAAkC,uDAA1B,GAA0B,yCAApB9C,EAAoB,EAApBA,KAAM+C,EAAc,EAAdA,QAClC,OAAQ/C,IACD4C,EACIG,EAEAD,KCvBPE,EAAcH,0BAAgB,CAClCI,UAAWC,IAKEC,EAFDC,sBAAYJ,EAAaK,iCCAvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,U","file":"static/js/main.6324a2f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item___aw3G\",\"buttonDelete\":\"ContactList_buttonDelete__14wwI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__7t_og\",\"number\":\"Contact_number__2Qova\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textFilter\":\"Filter_textFilter__27yp9\",\"inputFilter\":\"Filter_inputFilter__3l002\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__5Z3AZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__33FPg\",\"btnContactForm\":\"ContactForm_btnContactForm__3V6sk\",\"inputContactForm\":\"ContactForm_inputContactForm__96jPb\",\"contactFormLabel\":\"ContactForm_contactFormLabel__96Xo8\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    onSubmit(contact);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.contactFormLabel}>\r\n        Name\r\n        <input\r\n          onChange={handleInputChange}\r\n          className={s.inputContactForm}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.contactFormLabel}>\r\n        Number\r\n        <input\r\n          onChange={handleInputChange}\r\n          className={s.inputContactForm}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.btnContactForm}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\n\nexport default function Contact({ name, number }) {\n  return (\n    <>\n      <p className={s.name}>{name}</p>\n      <p className={s.number}>{number}</p>\n    </>\n  );\n}\n\nContact.propType = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport Contact from '../Contact/Contact';\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ name, number, id:string }) => (\r\n        <li className={s.item} key={string}>\r\n\t\t\t  <Contact name={name} number={number} />\r\n\r\n          <button\r\n            className={s.buttonDelete}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(string)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label className={s.textFilter}>\n      Find Contact by name\n      <input\n        className={s.inputFilter}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { useState, useEffect } from \"react\";\r\n// ===========================================\r\nimport Container from \"./container/Container\";\r\n// ===========================================\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport baseContact from \"./json/contact.json\";\r\n// ===========================================\r\nimport ContactList from \"./ContactList/ContactList\";\r\n// ===========================================\r\nimport Filter from \"./Filter/Filter\";\r\n// ===========================================\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState(\r\n    () => JSON.parse(window.localStorage.getItem('contacts')) ?? baseContact\r\n  );\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const formSubmitHandler = (data) => {\r\n    if (\r\n      contacts.some(\r\n        (element) =>\r\n          element.name.toLocaleLowerCase() === data.name.toLocaleLowerCase()\r\n      )\r\n    ) {\r\n      return alert(\"We have this contact\");\r\n    }\r\n\r\n    setContacts([...contacts, data]);\r\n  };\r\n\r\n  const changeFilter = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const getVisibleContact = () => {\r\n    const contactFilter = filter.toLocaleLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLocaleLowerCase().includes(contactFilter)\r\n    );\r\n  };\r\n\r\n  const deleteContact = (contactId) => {\r\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\"title\">PhoneBook</h1>\r\n      <ContactForm onSubmit={formSubmitHandler} />\r\n      <Filter value={filter} onChange={changeFilter} />\r\n\r\n      <h2 className=\"contactTitle\">Contacts</h2>\r\n      <ContactList\r\n        contacts={getVisibleContact()}\r\n        onDeleteContact={deleteContact}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const ADD_CONTACT = 'phone/submit'\r\nexport const DELETE_CONTACT = 'phone/delete'\r\nexport const CHANGE_FILTER='phone/changeFilter'","import baseContact from \"../../json/contact.json\";\r\nimport { ADD_CONTACT, DELETE_CONTACT, CHANGE_FILTER } from \"./phone-type\";\r\nimport { combineReducers } from \"redux\";\r\n\r\n\r\nconst contacts = (state = baseContact, { type, payload }) => {\r\n  switch (type) {\r\n    case ADD_CONTACT:\r\n      return state.some(\r\n        (element) =>\r\n          element.name.toLocaleLowerCase() === payload.name.toLocaleLowerCase()\r\n      )\r\n        ? alert(\"We have this contact\")\r\n        : [...state, payload];\r\n    case DELETE_CONTACT:\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case CHANGE_FILTER:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ contacts, filter });\r\n","import { createStore,combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport phoneBookReducer from \"./Phonebook/phone-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  phoneBook: phoneBookReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// =======REDUX=================\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}